Relational Databases

  RDS Database Types
    - SQL Server
    - Oracle
    - MySQL
    - PostgreSQL
    - MariaDB
    - Amazon Aurora

  RDS is for OLTP Workloads
    - Great for processing lots of small transactions, like customer orders, banking transaction, payments, and booking systems

  Not Suitable for OLAP Workloads
    - Use Redshift for data warehousing and OLAP tasks, like analyzing large amounts of data, reporting, and sales forecasting

############################################################

Increasing Read Performance with Read Replicas

  Multi-AZ
    - An exact copy of your production database in another AZ
    - Used for disaster recovery
    - In the event of a failure, RDS will automatically fail over to the standby instance

  Read Replica
    - A read-only copy of your primary database in the same AZ, cross-AZ, or cross-region
    - Used to increase or scale read performance
    - Great for read-heavy workloads and takes the load off your primary database for read-only workloads (e.g. Business Intelligence reporting jobs)

############################################################

What is Amazon Aurora?
  - is a MySQL and PostgreSQL-compatible relational database engine that combines the speed and availability of high-end commercial databases with the
    simplicity and cost-effectiveness of open-source databases
  
  Aurora Serverless Use Cases
    - Provides a relatively simple, cost-effective option for infrequent, intermittent, or unpredictable workloads

  Aurora
    - 2 copies of your data are contained in each AZ, with a min of 3 AZs. 6 copies of your data
    - You can share Aurora snapshots with other AWS accounts
    - 3 types of replicas available: Auror replicas, MySQL replicas, and PostgreSQL replicas. Automated failover is only available with Aurora replicas
    - Auror has automatied backups turned on by default. You can also take snapshots with Aurora. You can share these snapshots with other AWS accounts
    - Use Aurora Serverless if you want a simple, cost-effective options for infrequent, or unpredictable workloads

############################################################

DynamoDB Overview

  Facts about DynamoDB
    - Stored on SSD storage
    - Spread across 3 geographically distinct data centers
    - Eventually consistent reads (default)
    - Strongly consistent reads

  Difference between consistent reads and strongly consistent reads?
    - Eventually: Consistency across all copies of data is usually reached within a second. Repeating a read after a short time should return the updated data.
                  Best read performance
    - Strongly: Returns a result that reflects all writes that received a successful response prior to the read
    